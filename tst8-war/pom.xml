<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>nl.xs4all.banaan.tst8</groupId>
  <artifactId>tst8-war</artifactId>
  <packaging>war</packaging>
  <name>tst8-war</name>
  <description>
    A test to find effective ways to do testing and deployment
    of a wicket application.  The WAR part.
  </description>

  <parent>
    <groupId>nl.xs4all.banaan.tst8</groupId>
    <artifactId>tst8-app</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  
  <dependencies>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
     
    <dependency>
      <groupId>org.apache.wicket</groupId>
      <artifactId>wicket</artifactId>
    </dependency>
    
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>

    <dependency>
    	<groupId>org.apache.wicket</groupId>
    	<artifactId>wicket-guice</artifactId>
    </dependency>
          
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency> 

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/templates</directory>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/java</directory>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/java</directory>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/resources</directory>
        <includes>
          <include>**</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>

      <plugin>
        <!-- 
          This plugin allows running the application on port 8080 in a jetty
          container for testing purposes by doing mvn jetty:run.
          The jetty container is embedded within maven.
          The application needs to be compiled but not packaged into a war.
          http://jetty.mortbay.org/jetty/maven-plugin/run-mojo.html
          -->
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
          <configuration>
            <contextPath>/tst8-app</contextPath>
            <!-- assume we're calledfrom direct submodule of main pom. sigh. -->
            <webAppSourceDirectory>src/main/webapp</webAppSourceDirectory>
            <jettyEnvXml>src/jetty/jetty-env.xml</jettyEnvXml>
            <overrideWebXml>src/jetty/override-web.xml</overrideWebXml>
            <!-- needed for command line stop -->
            <stopPort>9966</stopPort>
            <stopKey>foo</stopKey>
          </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <!--  test coverage -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

</project>
